## **일본어 단어 학습 웹 서비스 'KOTOBAKO' 기획서 (v1.2)**

*   **문서 버전:** 1.2
*   **최종 수정일:** 2025년 9월 26일
*   **작성자:** 야차완 (기획), AI 어시스턴트 (개발 및 문서화)

### 1. 프로젝트 개요

*   **1.1. 프로젝트명:** Kotobako
*   **1.2. 한 줄 요약:** 간격 반복 학습(SRS) 시스템을 적용한 서버리스 기반의 개인 맞춤형 일본어 단어 학습 웹 애플리케이션
*   **1.3. 핵심 컨셉:**
    *   사용자가 자신의 페이스에 맞춰 N1~N5 레벨의 일본어 단어를 효율적으로 학습하고 암기할 수 있도록 지원한다.
    *   서버 없이 브라우저 기술(`localStorage`)만을 사용하여 사용자의 모든 학습 데이터와 설정을 관리함으로써, 100% 프라이버시를 보장하고 비용 없이 운영한다.
    *   미니멀하고 직관적인 UI와 키보드 중심의 조작계를 통해 사용자가 학습 자체에만 집중할 수 있는 쾌적한 환경을 제공한다.
*   **1.4. 주요 타겟:**
    *   JLPT(일본어 능력 시험)를 준비하는 모든 레벨의 수험생
    *   체계적인 단어 암기 도구가 필요한 일본어 학습자
    *   개인정보 유출 걱정 없이 안전하고 미려한 학습 환경을 원하는 사용자
*   **1.5. 주요 기술 스택:**
    *   **Frontend:** HTML5, CSS3, JavaScript (ES6+), GSAP (애니메이션)
    *   **Database:** Google Sheets (CSV 형식으로 데이터 제공)
    *   **Local Storage:** Web Storage API (`localStorage`)
    *   **Speech Synthesis:** Web Speech API (브라우저 내장 TTS)

### 2. 핵심 기능 명세

#### 2.1. 데이터 관리 (Data Management)

*   **마스터 단어 DB:**
    *   관리자가 Google Sheets를 통해 N1~N5 레벨별 시트로 단어 데이터를 관리한다.
    *   앱 실행 시, `fetch` API와 `Promise.all`을 통해 5개 시트의 CSV 데이터를 동시에 비동기적으로 불러온다.
    *   **데이터 포맷 (확정):** 후리가나(`ruby` 태그) 및 음성(TTS) 데이터의 정확한 생성을 위해, `reading` 필드는 아래 규칙을 따른다.
        *   **일반 단어:** 한자 단위로 발음을 분리하고 대괄호 `[]`로 감싼다. 오쿠리가나는 대괄호 바깥에 둔다.
            *   예시 1: `食べ物` → `食[た]べ物[もの]`
            *   예시 2: `受け取る` → `受[う]け取[と]る`
        *   **특별한 읽기 (熟字訓):** 단어 전체를 한 덩어리로 묶어 발음을 표기한다.
            *   예시: `昨日` → `昨日[きのう]`
    *   **컬럼 구조:** `level`, `word`, `reading`, `meaning`

*   **사용자 설정 데이터:**
    *   사용자의 모든 개인 설정은 브라우저의 `localStorage`에 JSON 형태로 저장되어, 재방문 시에도 그대로 유지된다.
    *   **저장 데이터 (`kotobako-settings`):**
        *   `selectedLevels`: 사용자가 선택한 학습 레벨 배열 (예: `['N5', 'N4']`)
        *   `isShuffleOn`: 단어 순서 랜덤 섞기 활성화 여부 (`true`/`false`)
        *   `isAutoSpeakOn`: 단어 음성 자동 재생 활성화 여부 (`true`/`false`)
        *   `isFuriganaOn`: 후리가나 표시 여부 (`true`/`false`)
    *   **테마 설정 (`kotobako-theme`):** 라이트/다크 모드 테마 이름이 별도로 저장된다.

#### 2.2. 메인 학습: 플래시카드 (Flashcard)

*   **UI 구성:**
    *   **카드 앞면:** 일본어 단어가 표시된다. `isFuriganaOn` 설정에 따라 후리가나 표시 여부가 결정된다.
    *   **카드 뒷면:** 단어의 한국어 뜻이 제목용 폰트(Paperlogy)로 크게 표시된다.
    *   **카드 뒤집기:** 카드 클릭 또는 `스페이스바` 키로 앞/뒤 전환이 가능하며, 부드러운 3D 뒤집기 애니메이션이 적용된다.
*   **상호작용 및 컨트롤:**
    *   **단어 탐색:** 화면 좌우의 화살표 버튼 또는 키보드 `방향키(←, →)`로 이전/다음 단어로 이동한다. 단어 전환 시 GSAP 라이브러리를 사용한 페이드아웃/인 애니메이션으로 쾌적한 시각 경험을 제공한다.
    *   **음성 자동 재생:** '자동 재생' 버튼이 활성화된 상태에서는 새 카드가 나타나거나, 카드가 앞면으로 뒤집힐 때마다 해당 단어의 정확한 발음을 자동으로 읽어준다.
    *   **음성 정확도:** `reading` 데이터를 정교하게 분석하여 모든 종류의 오쿠리가나(`食べ物`, `繰り返す` 등)를 포함한 정확한 발음을 생성한다. Web Speech API의 고질적인 끊김 현상은 '엔진 예열' 기법을 적용하여 근본적으로 해결했다.
    *   **학습 순서:** '랜덤 섞기' 버튼을 통해 현재 선택된 레벨의 단어들을 무작위 순서로 학습하거나, 기본 순서대로 학습할 수 있다.

#### 2.3. 실력 점검: 퀴즈 (Quiz) - *향후 구현 예정*

*   **퀴즈 종류:** 객관식(단어-뜻 매칭), 주관식(뜻 보고 단어 입력) 등을 지원한다.
*   **퀴즈 범위:** 사용자가 헤더에서 선택한 레벨의 단어 중에서 문제를 출제한다.

#### 2.4. 개인화: 나의 단어장 (My Wordbook) - *향후 구현 예정*

*   **기능:** 플래시카드 학습 중 원하는 단어를 개인 단어장에 추가, 조회, 삭제할 수 있다.
*   **데이터 관리:** 단어장 데이터는 `localStorage`에 저장되며, JSON 파일 형태로 내보내거나 불러올 수 있는 기능을 제공한다.

### 3. UI/UX 디자인 기조 및 확정 사안

*   **3.1. 디자인 원칙:** 미니멀하고 플랫한 디자인을 유지하며, 사용자가 콘텐츠에 집중할 수 있도록 불필요한 장식과 애니메이션을 최소화한다.
*   **3.2. 폰트:**
    *   **제목/강조/카드 뒷면:** Paperlogy (`font-heading`)
    *   **본문/일반:** Pretendard Variable (`font-body`)
*   **3.3. 컬러 테마:**
    *   라이트 모드(`aetherial-light`)와 다크 모드(`nordic-noir`)를 지원하며, CSS 변수를 통해 관리한다. 사용자의 선택은 `localStorage`에 저장된다.
*   **3.4. 레이아웃 및 컴포넌트 (확정):**
    *   **헤더:** `로고`, `학습 범위 선택기`, `메인 메뉴`로 구성된다. 범위 선택기는 연속된 UI에 동적 하이라이트 효과가 적용된다.
    *   **메인 콘텐츠 (학습):** `study-section` 전체가 화면의 수직 중앙에 위치하도록 Flexbox로 정렬된다.
        *   `study-area`: 플래시카드와 좌우 탐색 버튼으로 구성된다.
        *   `study-controls`: 카드 하단에 위치하며, 좌측에는 `단축키 안내`, 우측에는 `후리가나`, `랜덤 섞기`, `자동 재생` 토글 버튼이 순서대로 배치된다.
    *   **푸터:** 콘텐츠의 양과 관계없이 항상 화면 최하단에 고정된다.

### 4. 개발 진행 상황 및 향후 과제

#### 4.1. 완료된 사항 (Completed Tasks)

*   **Phase 0: 기획 및 기반 구축**
    *   **프로젝트 기획:** 서비스명 'Kotobako' 확정 및 핵심 기능 정의 완료.
    *   **DB 구축:** N1~N5 레벨 단어 데이터 수집 및 후리가나 규칙(`漢[かん]字[じ]`, `熟字訓[じゅくじくん]`)에 맞게 데이터 정제 완료. Google Sheets에 시트별로 데이터를 입력하고 웹에 CSV로 게시하여 실시간 연동 환경 구축 완료.
    *   **기본 UI 골격 구현:** `index.html`, `style.css`, `script.js` 구조 완성, 헤더/푸터 레이아웃, 탭 네비게이션, 테마 전환 기능 구현 완료.

*   **Phase 1: 핵심 학습 기능 구현**
    *   **데이터 연동:** 5개의 Google Sheets URL로부터 모든 단어 데이터를 비동기적으로 `fetch`하고, 따옴표로 감싸인 필드를 포함하여 안정적으로 파싱하는 CSV 로직을 구현 완료.
    *   **플래시카드 UI/UX:**
        *   단어의 앞/뒷면을 표시하고 3D 뒤집기 효과를 적용한 동적 플래시카드 UI 생성 완료.
        *   GSAP 라이브러리를 활용하여 부드러운 단어 전환 애니메이션 구현 완료.
    *   **후리가나 및 음성(TTS) 처리:**
        *   `reading` 데이터를 분석하여 `<ruby>` 태그를 동적으로 생성하는 `generateFuriganaHTML` 함수 구현 완료.
        *   모든 오쿠리가나(한자 사이, 한자 끝)를 포함하여 정확한 발음을 추출하는 `extractReadingText` 함수를 여러 차례의 디버깅을 거쳐 완성.
        *   Web Speech API의 '엔진 예열' 기법을 적용하여 음성 끊김 현상을 근본적으로 해결.
    *   **사용자 컨트롤 및 개인화:**
        *   **키보드 단축키:** `방향키`를 통한 단어 탐색 및 `스페이스바`를 통한 카드 뒤집기 기능 구현 완료.
        *   **학습 옵션:** `후리가나 On/Off`, `랜덤 섞기`, `음성 자동 재생` 기능을 토글 버튼으로 구현 완료.
        *   **설정 저장:** 사용자가 선택한 학습 레벨 및 모든 학습 옵션의 상태를 `localStorage`에 저장하고, 앱 실행 시 자동으로 불러와 UI에 반영하는 기능 구현 완료.

#### 4.2. 향후 개발 로드맵 (Future Development Roadmap)

*   **Phase 2: 간격 반복 학습(SRS) 로직 구현**
    *   **[To-Do]** 플래시카드 하단 컨트롤 영역에 **[어려움], [보통], [쉬움]** 난이도 평가 버튼 UI를 추가한다. (현재의 단축키 안내 및 옵션 버튼 영역은 다른 위치로 이동하거나 재구성 필요)
    *   **[To-Do]** 각 버튼 클릭 시, SRS 알고리즘(예: SM-2)에 따라 단어의 다음 복습 날짜를 계산하고 `localStorage`에 단어별 학습 진행 상황을 저장/업데이트하는 로직을 개발한다. (`wordProgress` 객체 관리)
    *   **[To-Do]** 학습 세션 시작 시, 복습 일정이 도래한 단어와 새로운 단어를 우선적으로 보여주도록 `updateStudySession` 로직을 고도화한다.

*   **Phase 3: 퀴즈 및 단어장 기능 구현**
    *   **[To-Do]** 퀴즈 섹션 UI 및 채점 로직을 개발한다.
    *   **[To-Do]** '나의 단어장' 추가/삭제/조회 기능 및 내보내기/불러오기 기능을 구현한다.

*   **Phase 4: 최종 다듬기 및 고도화**
    *   **[To-Do]** 히라가나/카타카나 학습 모드를 추가하는 것을 검토한다.
    *   **[To-Do]** 전체적인 UI/UX를 개선하고, 발견된 버그를 수정한다.